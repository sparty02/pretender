{"version":3,"sources":["fake-request.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["import { FakeXMLHttpRequest } from 'TBD location ';\n\nfunction FakeRequest(pretender){\n  // super()\n  FakeXMLHttpRequest.call(this);\n  this.pretender = pretender;\n}\n\n// passthrough handling\nvar events = ['load', 'error', 'timeout', 'progress', 'abort', 'readystatechange'];\nvar lifecycleProps = ['readyState', 'responseText', 'responseXML', 'status', 'statusText'];\n\nfunction createPassthrough(fakeXHR) {\n  var NativeXhr = this.pretender._nativeXMLHttpRequest;\n  var xhr = fakeXHR._passthroughRequest = new NativeXhr();\n  // listen to all events to update lifecycle properties\n\n  function eventHandler (event) {\n    xhr['on' + event] = function(e) {\n        // update lifecycle props on each event\n        for (var i = 0; i < lifecycleProps.length; i++) {\n          var prop = lifecycleProps[i];\n          if (xhr[prop]) {\n            fakeXHR[prop] = xhr[prop];\n          }\n        }\n        // fire fake events where applicable\n        fakeXHR.dispatchEvent(event, e);\n        if (fakeXHR['on' + event]) {\n          fakeXHR['on' + event](e);\n        }\n      };\n  }\n\n  events.forEach(eventHandler);\n\n  for (var i = 0; i < events.length; i++) {\n    eventHandler(events[i]);\n  }\n  xhr.open(fakeXHR.method, fakeXHR.url, fakeXHR.async, fakeXHR.username, fakeXHR.password);\n  xhr.timeout = fakeXHR.timeout;\n  xhr.withCredentials = fakeXHR.withCredentials;\n  for (var h in fakeXHR.requestHeaders) {\n    xhr.setRequestHeader(h, fakeXHR.requestHeaders[h]);\n  }\n  return xhr;\n}\n\n// extend\nvar proto = new FakeXMLHttpRequest();\nproto.send = function send(){\n  if (!this.pretender.running) {\n    throw new Error('You shut down a Pretender instance while there was a pending request. '+\n          'That request just tried to complete. Check to see if you accidentally shut down '+\n          'a pretender earlier than you intended to');\n  }\n\n  FakeXMLHttpRequest.prototype.send.apply(this, arguments);\n  if (!this.pretender.checkPassthrough(this)) {\n    this.pretender.handleRequest(this);\n  }\n  else {\n    var xhr = createPassthrough(this);\n    xhr.send.apply(xhr, arguments);\n  }\n};\n\nproto._passthroughCheck = function(method) {\n  if (this._passthroughRequest) {\n    return this._passthroughRequest[method].apply(this._passthroughRequest, arguments);\n  }\n  return FakeXMLHttpRequest.prototype[method].apply(this, arguments);\n};\n\nproto.abort = function abort(){\n  return this._passthroughCheck('abort', arguments);\n};\n\nproto.getResponseHeader = function getResponseHeader(){\n  return this._passthroughCheck('getResponseHeader', arguments);\n};\n\nproto.getAllResponseHeaders = function getAllResponseHeaders(){\n  return this._passthroughCheck('getAllResponseHeaders', arguments);\n};\n\nFakeRequest.prototype = proto;\n\nexport default FakeRequest;"],"sourceRoot":"/source/"}